write_tsv(dd, path = "protein.info.tsv", col_names = FALSE, quote_escape = FALSE)
write_tsv(dd, path = "new.protein.info.tsv", col_names = FALSE, quote_escape = FALSE)
a <- as.formula("Y~x")
print(a)
View(dd)
3326-2000
set.seed(2016)
## Simulate random allele designations for 100 bi-allelic SNPs
desig <- array(sample(c('A','C','G','T'), size = 200, repl = TRUE), dim=c(100, 2))
View(desig)
## Simulate random SNP genotypes for 20 individuals - put them in array format
## '-' indicates an unknown base
ga <- array(0, dim=c(20, 100))
for(i in 1:20)
for(j in 1:100)
ga[i, j] <- paste(sample(c(desig[j,],"-"), 2, prob=c(.46, .46, .08), repl=TRUE), collapse='')
View(ga)
desig2 <- data.frame(AlleleA_Forward = factor(desig[,1]), AlleleB_Forward = factor(desig[,2]))
ga.r <- array(5, dim=c(20, 100))
for(i in 1:100) ga.r[,i] <- snpRecode(ga[,i], desig2[i,])
library(gdmp)
desig2 <- data.frame(AlleleA_Forward = factor(desig[,1]), AlleleB_Forward = factor(desig[,2]))
ga.r <- array(5, dim=c(20, 100))
for(i in 1:100) ga.r[,i] <- snpRecode(ga[,i], desig2[i,])
View(ga.r)
View(desig2)
install.packages("snpStats")
library(snpStats)
BiocManager::install("snpStats")
library(snpStats)
BiocManager::install("snpStats")
library(snpStats)
g1 <- genotype( c('T/A',    NA, 'T/T',    NA, 'T/A',    NA, 'T/T', 'T/A',
'T/T', 'T/T', 'T/A', 'A/A', 'T/T', 'T/A', 'T/A', 'T/T',
NA, 'T/A', 'T/A',   NA) )
g2 <- genotype( c('C/A', 'C/A', 'C/C', 'C/A', 'C/C', 'C/A', 'C/A', 'C/A',
'C/A', 'C/C', 'C/A', 'A/A', 'C/A', 'A/A', 'C/A', 'C/C',
'C/A', 'C/A', 'C/A', 'A/A') )
g3 <- genotype( c('T/A', 'T/A', 'T/T', 'T/A', 'T/T', 'T/A', 'T/A', 'T/A',
'T/A', 'T/T', 'T/A', 'T/T', 'T/A', 'T/A', 'T/A', 'T/T',
'T/A', 'T/A', 'T/A', 'T/T') )
install.packages("genetics")
library(genetics)
g1 <- genotype( c('T/A',    NA, 'T/T',    NA, 'T/A',    NA, 'T/T', 'T/A',
'T/T', 'T/T', 'T/A', 'A/A', 'T/T', 'T/A', 'T/A', 'T/T',
NA, 'T/A', 'T/A',   NA) )
g2 <- genotype( c('C/A', 'C/A', 'C/C', 'C/A', 'C/C', 'C/A', 'C/A', 'C/A',
'C/A', 'C/C', 'C/A', 'A/A', 'C/A', 'A/A', 'C/A', 'C/C',
'C/A', 'C/A', 'C/A', 'A/A') )
g3 <- genotype( c('T/A', 'T/A', 'T/T', 'T/A', 'T/T', 'T/A', 'T/A', 'T/A',
'T/A', 'T/T', 'T/A', 'T/T', 'T/A', 'T/A', 'T/A', 'T/T',
'T/A', 'T/A', 'T/A', 'T/T') )
LD(g1,g2)
data <- makeGenotypes(data.frame(g1,g2,g3))
LD(data)
LD(data)
g1
g1[!is.na(g1)]
a <- rnorm(100, 1)
b <- rnorm(100, -1)
cor(a, b)
(a-mean(a))*(b-mean(b))/(sd(a)*sd(b))
mean((a-mean(a))*(b-mean(b)))/(sd(a)*sd(b))
cov(a, b)
mean((a-mean(a))*(b-mean(b)))
?cov
mean(a*b) - mean(a)*mean(b)
sum((a-mean(a))*(b-mean(b)))/99
(sum((a-mean(a))*(b-mean(b)))/99)/(sd(a)*sd(b))
cor(a, b)
g1 <- genotype( c('T/A', 'T/T') )
g2 <- genotype( c('C/A', 'C/A') )
LD(g1,g2)
1-3/8
a <- sample(c(0, 1), 100, prob = c(0.25, 0.75))
b <- sample(c(0, 1), 100, prob = c(0.6, 0.4))
a <- sample(c(0, 1), 100, prob = c(0.25, 0.75), replace = TRUE)
b <- sample(c(0, 1), 100, prob = c(0.6, 0.4), replace = TRUE)
cor(a, b)
sum(a)*sum(b)
sum(a)*sum(b)/10000
mean((a-mean(a))*(b-mean(b)))/(sd(a)*sd(b))
((a+b)==2)/100-sum(a)*sum(b)/10000
sum((a+b)==2)/100-sum(a)*sum(b)/10000
a
b
(a +b)==2
sum((a +b)==2)
sum(a)
sum(b)
D <- sum(a+b == 2)/100 - sum(a)*sum(b)/10000
D
r <- D/(0.71*0.29*0.39*61)
r
mean((a-mean(a))*(b-mean(b)))/(sd(a)*sd(b))
r <- D/sqrt(0.71*0.29*0.39*61)
r
mean((a-mean(a))*(b-mean(b)))/(sqrt(mean((a-mean(a))^2))*sqrt(mean((b-mean(b))^2)))
set.seed(2016)
## Simulate random allele designations for 100 bi-allelic SNPs
desig <- array(sample(c('A','C','G','T'), size = 20, repl = TRUE), dim=c(10, 2))
## Simulate random SNP genotypes for 20 individuals - put them in array format
## '-' indicates an unknown base
ga <- array(0, dim=c(3, 10))
for(i in 1:20)
for(j in 1:100)
ga[i, j] <- paste(sample(desig[j,], 2, prob=c(.4, .6,), repl=TRUE), collapse='')
for(i in 1:20)
for(j in 1:100)
ga[i, j] <- paste(sample(desig[j,], 2, prob=c(.4, .6), repl=TRUE), collapse='')
## Simulate random SNP genotypes for 20 individuals - put them in array format
## '-' indicates an unknown base
ga <- array(0, dim=c(3, 10))
for(i in 1:3)
for(j in 1:10)
ga[i, j] <- paste(sample(desig[j,], 2, prob=c(.4, .6), repl=TRUE), collapse='')
desig2 <- data.frame(AlleleA_Forward = factor(desig[,1]), AlleleB_Forward = factor(desig[,2]))
ga.r <- array(5, dim=c(20, 100))
for(i in 1:100) ga.r[,i] <- snpRecode(ga[,i], desig2[i,])
ga.r <- array(5, dim=c(3, 10))
for(i in 1:100) ga.r[,i] <- snpRecode(ga[,i], desig2[i,])
## Recode the matrix, place recoded genotypes in ga.r
desig2 <- data.frame(AlleleA_Forward = factor(desig[,1]), AlleleB_Forward = factor(desig[,2]))
ga.r <- array(3, dim=c(3, 10))
for(i in 1:100) ga.r[,i] <- snpRecode(ga[,i], desig2[i,])
ga.r <- array(5, dim=c(3, 10))
for(i in 1:10) ga.r[,i] <- snpRecode(ga[,i], desig2[i,])
cor(ga.r)
mean((a-0.75)*(b-0.4))/(sqrt(mean((a-0.75)^2))*sqrt(mean((b-0.4)^2)))
D <- sum(a+b == 2)/100 - sum(a)*sum(b)/10000
r <- D/sqrt(0.71*0.29*0.39*61)
r
D <- sum(a+b == 2)/100 - sum(a)*sum(b)/10000
D
r <- D/sqrt(0.75*0.25*0.4*6)
r
cov(a, b)
r <- D/sqrt(0.75*0.25*0.4*0.6)
cov(a, b)/sqrt(0.75*0.25*0.4*0.6)
r
mean((a-mean(a))*(b-mean(b)))/sqrt(0.75*0.25*0.4*0.6)
r
sum(a +b ==0)/100 - (100-sum(a))*(100 - sum(b))/10000
D <- sum(a+b == 2)/100 - sum(a)*sum(b)/10000
D
(a+b == 1)
as.numeric((a+b == 1))
as.numeric((a+b == 1)) - 0.75*0.4
(as.numeric((a+b == 1)) - 0.75*0.4)^2
(as.numeric((a+b == 1)) - 0.75*0.4)^2/(0.75*0.4)
sum((as.numeric((a+b == 1)) - 0.75*0.4)^2)/(0.75*0.4)
pchisq(99.3333, 99)
D <- sum(a+b == 2)/100 - 0.75*0.4
r <- D/sqrt(0.75*0.25*0.4*0.6)
r
r^2*100
D
D
r*2
r**2
cov(a, b)/sqrt(0.75*0.25*0.4*0.6)
100*D^2/(0.75*0.25*0.6*0.4)
pchisq(0.2222, 99)
sum(a+b == 1)
sum(a+b == 1)/100 - 0.75*0.4
(sum(a+b == 1)/100 - 0.75*0.4)^2/(0.75*0.4)
(sum(a+b == 1)/100 - 0.75*0.4)^2/(0.75*0.4*0.25*0.6)
100*(sum(a+b == 1)/100 - 0.75*0.4)^2/(0.75*0.4*0.25*0.6)
(sum(a+b == 1)/100 - 0.75*0.4)
(sum(a+b == 1)/100 - 0.75*0.4)^2/(0.75*0.4)
100*D^2/(0.75*0.25*0.6*0.4)
(sum(a+b == 1)/100 - 0.75*0.4)^2/(0.75*0.4)
623/6
library(readr)
setwd("~/USCHPC/research/UKBB")
a <- read_tsv("variants.tsv")
a <- read_tsv("variants.tsv", n_max = 100)
View(a)
parameter_combos <- read_csv("./focus_sim_parameters.csv")
setwd("~/USCHPC/research/sim_scripts")
parameter_combos <- read_csv("./focus_sim_parameters.csv")
View
View(parameter_combos)
sims <- c(126:130,136:140,146:150)
sims
parameter_combos$round
paste("/scratch/zeyunlu/research/TWAS", round, "/", sep = "")
sims <- c(197)
sims
i <- sims
round <- paste("round", parameter_combos$round[i], sep="")
round
paste("/scratch/zeyunlu/research/TWAS", round, "/", sep = "")
paste("/scratch/zeyunlu/research/TWAS/", round, "/", sep = "")
filename <- paste(parameter_combos$Name[i], ".sh", sep="")
filename
paste("cp ../ME_focus_sim_TEMPLATE_", parameter_combos$script_version[i],".sh ", filename, sep="")
rdir <- unlist(strsplit(unlist(strsplit(filename, split="_"))[grep("sh",unlist(strsplit(filename, split="_")))], split=".", fixed=T))[1]
rdir
paste("sed -i 's/X_LDETECT/", parameter_combos$LDETECT_regs[i],"_LDETECT/' ", filename, sep="")
paste("sed -i 's/roundX/round", parameter_combos$round[i],"/' ", filename, sep="")
paste("sed -i 's/N1=X/N1=", parameter_combos$N1[i],"/' ", filename, sep="")
library(readr)
library(dplyr)
??separate
library(tidyr)
?separate
?separate
setwd("~/USCHPC/research/UKBB")
rsidInfo <- read_tsv("first_two_variants.tsv", n_max = 100, message = FALSE)
options(readr.num_columns = 0)
rsidInfo <- read_tsv("first_two_variants.tsv", n_max = 100)
setwd("~/USCHPC/research/UKBB")
setwd("/home1/zeyunlu/research/UKBB/")
dataList <- gsub(pattern = ".tsv.bgz", "", readLines("gwasList.tsv"))
dataList
tmp <- dataList[1]
tmp
print(paste0(i, ": ", tmp))
#tmp <- "30140_irnt.gwas.imputed_v3.both_sexes"
i <- 0
i <- i + 1
print(paste0(i, ": ", tmp))
cmd <- paste0("gunzip -c ", tmp, ".tsv.bgz > ../tsvfile/", tmp, ".tsv")
cmd
print(paste0(i, ": ", tmp))
cmd <- paste0("gunzip -c ", tmp, ".tsv.bgz > ", tmp, ".tsv")
cmd
ls()
rm(ls())
rm(list = ls()!="tmp")
rm(list = ls()[tmp()!="tmp"])
rm(list = ls()[ls()!="tmp"])
ls()
a <- "tmp"
rm(tmp)
ls
ls
ls()
a
rm(a)
ls()
1+1
library(dplyr)
install.packages("dplyr")
install.packages("tidyr")
install.packages("readr")
install.packages("ggplot2")
install.packages("purr")
install.packages("purrr")
knitr::opts_chunk$set(echo = TRUE)
install.packages("knitr")
install.packages("rmarkdown")
if(!require("GEOquery")) {BiocManager::install("GEOquery")}
install.packages("BiocManager")
install.packages("devtools")
if(!require("GEOquery")) {BiocManager::install("GEOquery")}
if (!require(matrixStats)) {install.packages("matrixStats")}
knitr::opts_chunk$set(echo = TRUE)
if (!require(ggplot2)) install.packages("ggplot2")
if (!require(plotly)) install.packages("plotly")
if (!require(Rtsne)) {install.packages("Rtsne")}
if (!require(devtools)) install.packages("devtools")
if (!require(PMA)) install.packages("PMA")
if (!require(gg3D)) devtools::install_github("AckerDWM/gg3D")
library(limma)
knitr::opts_chunk$set(echo = TRUE)
if (!require(survminer)) install.packages("survminer")
install.packages("survminer")
install.packages("WGCNA")
setwd("~/USCHPC/research/interval5")
library(readr)
library(dplyr)
tmp <- read_table(file = "filelist.txt", col_names = FALSE)
a <- tmp %>%
#group_by(1:n()) %>%
mutate(suffix = ifelse(grepl(".hsq", X1), "hsq",
ifelse(grepl("wgt.RDat", X1), "wgt.RDat", NA)),
X1 = gsub(".hsq", "", X1),
X1 = gsub(".wgt.RDat", "", X1)) %>%
group_by(X1) %>%
mutate(status = all(c("wgt.RDat", "hsq") %in% suffix),
nro = n()) %>%
filter(nro == 2) %>%
distinct(X1)
View(a)
tmp2 <- read_tsv("new.protein.info.tsv", col_names = FALSE)
new <- tmp2 %>%
filter(!X7 %in% a$X1)
nrow(new)
# For FUSION
tmp <- read_table(file = "filelistFUSION.txt", col_names = FALSE)
a <- tmp %>%
#group_by(1:n()) %>%
mutate(suffix = ifelse(grepl(".hsq", X1), "hsq",
ifelse(grepl("wgt.RDat", X1), "wgt.RDat", NA)),
X1 = gsub(".hsq", "", X1),
X1 = gsub(".wgt.RDat", "", X1)) %>%
group_by(X1) %>%
mutate(status = all(c("wgt.RDat", "hsq") %in% suffix),
nro = n()) %>%
filter(nro == 2) %>%
distinct(X1)
tmp2 <- read_tsv("new.protein.info.tsv", col_names = FALSE)
new <- tmp2 %>%
filter(!X7 %in% a$X1)
nrow(new)
a <- tmp %>%
#group_by(1:n()) %>%
mutate(suffix = ifelse(grepl(".hsq", X1), "hsq",
ifelse(grepl("wgt.RDat", X1), "wgt.RDat", NA)),
X1 = gsub(".hsq", "", X1),
X1 = gsub(".wgt.RDat", "", X1)) %>%
group_by(X1) %>%
mutate(status = all(c("wgt.RDat", "hsq") %in% suffix),
nro = n())
tmp <- read_table(file = "filelist.txt", col_names = FALSE)
a <- tmp %>%
#group_by(1:n()) %>%
mutate(suffix = ifelse(grepl(".hsq", X1), "hsq",
ifelse(grepl("wgt.RDat", X1), "wgt.RDat", NA)),
X1 = gsub(".hsq", "", X1),
X1 = gsub(".wgt.RDat", "", X1)) %>%
group_by(X1) %>%
mutate(status = all(c("wgt.RDat", "hsq") %in% suffix),
nro = n()) %>%
filter(nro == 2) %>%
distinct(X1)
a <- tmp %>%
#group_by(1:n()) %>%
mutate(suffix = ifelse(grepl(".hsq", X1), "hsq",
ifelse(grepl("wgt.RDat", X1), "wgt.RDat", NA)),
X1 = gsub(".hsq", "", X1),
X1 = gsub(".wgt.RDat", "", X1)) %>%
group_by(X1) %>%
mutate(status = all(c("wgt.RDat", "hsq") %in% suffix),
nro = n())
new <- tmp2 %>%
filter(!X7 %in% a$X1)
nrow(new)
# For FUSION
tmp <- read_table(file = "filelistFUSION.txt", col_names = FALSE)
a <- tmp %>%
#group_by(1:n()) %>%
mutate(suffix = ifelse(grepl(".hsq", X1), "hsq",
ifelse(grepl("wgt.RDat", X1), "wgt.RDat", NA)),
X1 = gsub(".hsq", "", X1),
X1 = gsub(".wgt.RDat", "", X1)) %>%
group_by(X1) %>%
mutate(status = all(c("wgt.RDat", "hsq") %in% suffix),
nro = n()) %>%
filter(nro == 2) %>%
distinct(X1)
new <- tmp2 %>%
filter(!X7 %in% a$X1)
nrow(new)
tmp <- read_table(file = "filelist.txt", col_names = FALSE)
a <- tmp %>%
#group_by(1:n()) %>%
mutate(suffix = ifelse(grepl(".hsq", X1), "hsq",
ifelse(grepl("wgt.RDat", X1), "wgt.RDat", NA)),
X1 = gsub(".hsq", "", X1),
X1 = gsub(".wgt.RDat", "", X1)) %>%
group_by(X1) %>%
mutate(status = all(c("wgt.RDat", "hsq") %in% suffix),
nro = n()) %>%
filter(nro == 2) %>%
distinct(X1)
new <- tmp2 %>%
filter(!X7 %in% a$X1)
nrow(new)
ls()
load("~/Google Drive/USCStudy/Summer2020/PM579/PM579/data/RNAseq/cnts.rda")
ls()
View(cnts)
load("~/Google Drive/USCStudy/Summer2020/PM579/PM579/data/luad.rda")
ls()
dim(luad)
head(luad)
dim(luad)
str(luad)
View(luad)
View(luad$E)
View(luad$targets)
install.packages("genefilter")
if(!require("genefilter")) {BiocManager::install("genefilter")}
72*0.25
72*0.75
setwd("~/Google Drive/USCStudy/Summer2020/PM579/PM579Project/PM579FinalProject")
a <- read_csv("data/whole.csv")
library(readr)
library(dplyr)
a <- read_csv("data/whole.csv")
View(a)
b <- read_csv("data/datasets_1868_3249_actual.csv")
View(b)
library(tidyr)
?spread
a <- read_csv("data/whole.csv") %>%
select(-`Gene Accession Number`) %>%
pivot_wider(names_from = "Gene Description")
str(a)
?pivot_wider
a <- read_csv("data/whole.csv") %>%
select(-`Gene Accession Number`)
View(a)
?rownames_to_column
library(tibble)
a <- read_csv("data/whole.csv") %>%
select(-`Gene Accession Number`) %>%
rownames_to_column()
a <- read_csv("data/whole.csv") %>%
select(-`Gene Accession Number`) %>%
rownames_to_column() %>%
pivot_longer(-rownname, "variable", "value")
?pivot_longer
a <- read_csv("data/whole.csv") %>%
select(-`Gene Accession Number`) %>%
rownames_to_column() %>%
pivot_longer(-rowname, "variable", "value")
colnames(a)
a <- read_csv("data/whole.csv") %>%
select(-`Gene Accession Number`) %>%
#rownames_to_column() %>%
pivot_longer(-`Gene Description`,"variable", "value")
a <- read_csv("data/whole.csv") %>%
select(-`Gene Accession Number`) %>%
#rownames_to_column() %>%
pivot_longer(-`Gene Description`,"variable", "value") %>%
pivot_wider(variable, `Gene Description`)
a <- read_csv("data/whole.csv") %>%
select(-`Gene Accession Number`) %>%
#rownames_to_column() %>%
pivot_longer(-`Gene Description`,"variable", "value") %>%
pivot_wider(variable, `Gene Description`) %>%
arrange(variable)
View(a)
b <- read_csv("data/datasets_1868_3249_actual.csv")
a <- read_csv("data/whole.csv") %>%
select(-`Gene Accession Number`) %>%
#rownames_to_column() %>%
pivot_longer(-`Gene Description`,"patient", "value") %>%
pivot_wider(variable, `Gene Description`)
b <- read_csv("data/datasets_1868_3249_actual.csv") %>%
left_join(a, by = "patient")
a <- read_csv("data/whole.csv") %>%
select(-`Gene Accession Number`) %>%
#rownames_to_column() %>%
pivot_longer(-`Gene Description`,"patient", "value") %>%
pivot_wider(variable, `Gene Description`)
a <- read_csv("data/whole.csv") %>%
select(-`Gene Accession Number`) %>%
#rownames_to_column() %>%
pivot_longer(-`Gene Description`,"patient", "value") %>%
pivot_wider(patient, `Gene Description`)
b <- read_csv("data/datasets_1868_3249_actual.csv") %>%
left_join(a, by = "patient")
b <- read_csv("data/datasets_1868_3249_actual.csv") %>%
mutate(patient = as.character(patient)) %>%
left_join(a, by = "patient")
nrow(b)
dim(b)
b <- read_csv("data/datasets_1868_3249_actual.csv") %>%
mutate(patient = as.character(patient)) %>%
left_join(a, by = "patient") %>%
filter(complete.cases(.))
a <- read_csv("data/whole.csv") %>%
select(-`Gene Accession Number`) %>%
#rownames_to_column() %>%
pivot_longer(-`Gene Description`,"patient", "value") %>%
pivot_wider(patient, `Gene Description`) %>%
filter(complete.cases(.))
a <- read_csv("data/whole.csv") %>%
select(-`Gene Accession Number`) %>%
#rownames_to_column() %>%
pivot_longer(-`Gene Description`,"patient", "value") %>%
pivot_wider(patient, `Gene Description`) %>%
drop_na()
dim(a)
b <- read_csv("data/datasets_1868_3249_actual.csv") %>%
mutate(patient = as.character(patient)) %>%
left_join(a, by = "patient")
write_csv(b, "final.csv", quote_escape = FALSE)
write_csv(b, path = "data/final.csv", quote_escape = FALSE)
View(b)
str(b)
write_csv(as.data.frame(b), path = "data/final.csv", quote_escape = FALSE)
class(b)
b$listcolumn <- sapply(df$listcolumn, function(x) paste0(unlist(x), collapse = "\n"))
b <- as.data.frame(b)
class(b)
colnames(b)
class(colnames(b))
write_csv(b, path = "data/final.csv", quote_escape = FALSE)
write.csv(b, file = "data/final.csv", quote = FALSE)
write.csv(b, file = "data/final.csv", quote = FALSE, col.names = TRUE)
df <- apply(b, 2, as.character)
write_csv(df, path = "data/final.csv", quote_escape = FALSE)
class(df)
View(df)
df <- as.data.frame(df)
write_csv(df, path = "data/final.csv", quote_escape = FALSE)
haah <- read_csv("data/final.csv")
View(haah)
write_tsv(df, path = "data/final.tsv", quote_escape = FALSE)
haah <- read_csv("data/final.tsv")
View(haah)
haah <- read_tsv("data/final.tsv")
View(haah)
haah <- read_csv("data/final.csv",col_types = NULL)
View(haah)
save(df, file = "final.rdata")
